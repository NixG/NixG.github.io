<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关与刚开始Hexo的</title>
      <link href="2021/05/26/hello-world/"/>
      <url>2021/05/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>也是因为刚开始做<a href="https://hexo.io/">Hexo</a>博客，好多地方不熟悉，就先记一些零碎的关于美化和使用的小记录吧（ps:懒得再建一个文档就先用自带的Hello world了😓）</p><h2 id="快速启动"><a href="#快速启动" class="headerlink" title="快速启动"></a>快速启动</h2><h3 id="创建一篇新的文章"><a href="#创建一篇新的文章" class="headerlink" title="创建一篇新的文章"></a>创建一篇新的文章</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span>$ hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token string">"My New Post"</span></code></pre><p>先就是新建一个md文件了，应该是在Hexo的主目录运行指令，对于我来说的话就是<code>hexoblog</code>，然后创建的文件可以在<code>hexoblog/source/_posts/</code>下找到。<br>为什么不直接在存储的目录下新建文档然后改成md后缀，这涉及到文章的布局，也就是第二条指令中的<code>[layout]</code>。</p><h3 id="文章布局"><a href="#文章布局" class="headerlink" title="文章布局"></a>文章布局</h3><p>布局有三种：<code>post</code>（文章）、<code>draft</code>（草稿）、<code>page</code>（页面）<br>在新建文件是，Hexo会根据<code>hexoblog/scaffolds</code>文件夹内对应的文件（可以理解为模板）来建立md文件(就先不放图了哈哈😓)<br>如果没有指定布局像这样</p><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>则为默认布局<code>post</code>，可以在站点配置文件修改 <code>default_layout</code> 参数来修改默认布局。<br>不同的文件也会存储在不同的路径。</p><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><p>当我们创建一个md文件后，打开后会看到一些内容，这些称为<code>Front-matter</code>，它是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> Hello World <span class="token comment" spellcheck="true"># 标题就是我们上面创建的时候指定的名字</span><span class="token key atrule">date</span><span class="token punctuation">:</span> 2013/7/13 20<span class="token punctuation">:</span><span class="token datetime number">46:25</span> <span class="token comment" spellcheck="true"># 文件创建的时间</span><span class="token punctuation">---</span></code></pre><blockquote><p>在<code>Typora</code>中我们在md文件的首行（必须是第一行）输入<code>---</code> ，然后按回车就可以插入<code>Front-matter</code>了。</p></blockquote><p>Front-matter预定义参数</p><pre class=" language-text"><code class="language-text">  layout  布局  默认为true，如果你不想你的文章被处理，可以设置为false  title  标题  标题会显示在最上方居中位置       date  建立日期    如果不指定则为默认值-文件创建日期，可以自定义。  update  更新日期  如果不指定则为默认值-文件修改后重新生成静态文件的日期。  comments  是否开启文章的评论功能 默认值为true  tags  标签（不适用于页面page布局）  categoreies  分类（不适用于页面page布局）  permalink  覆盖文章网址  keywords  仅用于 meta 标签和 Open Graph 的关键词（不推荐使用）</code></pre><h3 id="为文章添加分类与标签"><a href="#为文章添加分类与标签" class="headerlink" title="为文章添加分类与标签"></a>为文章添加分类与标签</h3><p>只有文章（post布局）支持分类和标签，需要在<code>Front-matter</code>中设置。分类有层级关系，标签没有。</p><p>举个例子：<br>1）下面文章它的标签是：Hexo、博客<br>2）分类是： 个人博客 &gt; Hexo博客<br>3）“Hexo博客” 是 “个人博客” 的子分类</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">categories</span><span class="token punctuation">:</span><span class="token punctuation">-</span> 个人博客（第一层级）<span class="token punctuation">-</span> Hexo博客（第二层级）<span class="token key atrule">tags</span><span class="token punctuation">:</span><span class="token punctuation">-</span> Hexo<span class="token punctuation">-</span> 博客</code></pre><h3 id="为文章添加多个分类"><a href="#为文章添加多个分类" class="headerlink" title="为文章添加多个分类"></a>为文章添加多个分类</h3><p>1）下面文章属于三个分类：日常 &gt; 生活，日常 &gt; 随想，日记<br>2）其中生活、随想为日常的子分类，日常和日记为同级分类</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">categories</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token punctuation">[</span>日常<span class="token punctuation">,</span> 生活<span class="token punctuation">]</span><span class="token punctuation">-</span> <span class="token punctuation">[</span>日常<span class="token punctuation">,</span> 随想<span class="token punctuation">]</span><span class="token punctuation">-</span> <span class="token punctuation">[</span>日记<span class="token punctuation">]</span></code></pre><h3 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h3><pre class=" language-bash"><code class="language-bash">$ hexo clean$ heso generate$ hexo server</code></pre><p>清空缓存，生成静态页面，运行服务器</p><h3 id="部署到远程站点"><a href="#部署到远程站点" class="headerlink" title="部署到远程站点"></a>部署到远程站点</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>关于远程站点我是部署到GitHub，这个我记得是需要在主目录里的<code>_config.yml</code>里面修改的，具体修改后的代码：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span> git@github.com<span class="token punctuation">:</span>***/***.github.io.git  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master</code></pre><h3 id="目录样式"><a href="#目录样式" class="headerlink" title="目录样式"></a>目录样式</h3><p>路径：<code>themes\Matery\layout\_partial\post-detail-toc.ejs</code></p><p>代码部分：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.toc-widget</span> </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">345</span>px<span class="token punctuation">;</span>        <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>,<span class="token number">0.7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">10</span>px <span class="token number">35</span>px <span class="token number">2</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.15</span><span class="token punctuation">)</span>, <span class="token number">0</span> <span class="token number">5</span>px <span class="token number">15</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.07</span><span class="token punctuation">)</span>, <span class="token number">0</span> <span class="token number">2</span>px <span class="token number">5</span>px -<span class="token number">5</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.1</span><span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>暂且先写这么多吧，主要是先为了过一下瘾</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
